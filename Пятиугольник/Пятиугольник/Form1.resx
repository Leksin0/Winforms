<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>